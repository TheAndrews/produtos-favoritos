// Code generated by mockery v2.53.4. DO NOT EDIT.

package mocks

import (
	gin "github.com/gin-gonic/gin"
	mock "github.com/stretchr/testify/mock"
)

// CustomerHandler is an autogenerated mock type for the CustomerHandler type
type CustomerHandler struct {
	mock.Mock
}

// Create provides a mock function with given fields: c
func (_m *CustomerHandler) Create(c *gin.Context) {
	_m.Called(c)
}

// Delete provides a mock function with given fields: c
func (_m *CustomerHandler) Delete(c *gin.Context) {
	_m.Called(c)
}

// GetByID provides a mock function with given fields: c
func (_m *CustomerHandler) GetByID(c *gin.Context) {
	_m.Called(c)
}

// List provides a mock function with given fields: c
func (_m *CustomerHandler) List(c *gin.Context) {
	_m.Called(c)
}

// Update provides a mock function with given fields: c
func (_m *CustomerHandler) Update(c *gin.Context) {
	_m.Called(c)
}

// NewCustomerHandler creates a new instance of CustomerHandler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewCustomerHandler(t interface {
	mock.TestingT
	Cleanup(func())
}) *CustomerHandler {
	mock := &CustomerHandler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
