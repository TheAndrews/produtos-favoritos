// Code generated by mockery v2.53.4. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// WishlistServicer is an autogenerated mock type for the WishlistServicer type
type WishlistServicer struct {
	mock.Mock
}

// RemoveProductFromWishlist provides a mock function with given fields: customerID, productID
func (_m *WishlistServicer) RemoveProductFromWishlist(customerID string, productID int32) error {
	ret := _m.Called(customerID, productID)

	if len(ret) == 0 {
		panic("no return value specified for RemoveProductFromWishlist")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string, int32) error); ok {
		r0 = rf(customerID, productID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// WishlistProduct provides a mock function with given fields: productID, customerID
func (_m *WishlistServicer) WishlistProduct(productID int32, customerID string) error {
	ret := _m.Called(productID, customerID)

	if len(ret) == 0 {
		panic("no return value specified for WishlistProduct")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(int32, string) error); ok {
		r0 = rf(productID, customerID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewWishlistServicer creates a new instance of WishlistServicer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewWishlistServicer(t interface {
	mock.TestingT
	Cleanup(func())
}) *WishlistServicer {
	mock := &WishlistServicer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
